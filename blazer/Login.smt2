(declare-rel fail ())
(declare-rel pwcheck (Bool Bool Int Int Int Int (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int))
(declare-rel loop (Bool Bool Int Int Int Int Int Int (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int))

(declare-var p1 Bool)
(declare-var glen1 Int)
(declare-var i1 Int)
(declare-var i1_i Int)
(declare-var plen1 Int)
(declare-var l1 Bool)
(declare-var lt1 Bool)
(declare-var lf1 Bool)
(declare-var ltt1 Bool)
(declare-var ltf1 Bool)
(declare-var guess1 (Array Int Int))
(declare-var pw1 (Array Int Int))
(declare-var time1 Int)
(declare-var time1_i Int)
(declare-var time1_ii Int)
(declare-var time1_iii Int)
(declare-var time1_iv Int)
(declare-var p2 Bool)
(declare-var glen2 Int)
(declare-var i2 Int)
(declare-var i2_i Int)
(declare-var plen2 Int)
(declare-var l2 Bool)
(declare-var lt2 Bool)
(declare-var lf2 Bool)
(declare-var ltt2 Bool)
(declare-var ltf2 Bool)
(declare-var guess2 (Array Int Int))
(declare-var pw2 (Array Int Int))
(declare-var time2 Int)
(declare-var time2_i Int)
(declare-var time2_ii Int)
(declare-var time2_iii Int)
(declare-var time2_iv Int)

(rule (=> (and
  (or (and p1 (< i1 glen1)) (and p2 (< i2 glen2)))
  (= l1 (and p1 (< i1 glen1)))
  (= l2 (and p2 (< i2 glen2)))
  (=> l1 (= time1_i (+ time1 2)))
  (=> l2 (= time2_i (+ time2 2)))
  (= lt1 (and l1 (< i1 plen1)))
  (= lt2 (and l2 (< i2 plen2)))
  (= lf1 (and l1 (not (< i1 plen1))))
  (= lf2 (and l2 (not (< i2 plen2))))
  (=> lt1 (= time1_ii (+ time1_i 1)))
  (=> lt2 (= time2_ii (+ time2_i 1)))
  (= ltt1 (and lt1 (= (select guess1 i1) (select pw1 i1))))
  (= ltt2 (and lt2 (= (select guess2 i2) (select pw2 i2))))
  (= ltf1 (and lt1 (not (= (select guess1 i1) (select pw1 i1)))))
  (= ltf2 (and lt2 (not (= (select guess2 i2) (select pw2 i2)))))
  (=> ltt1 (= time1_iii (+ time1_ii 1)))
  (=> ltt2 (= time2_iii (+ time2_ii 1)))
  (=> ltf1 (= time1_iii (+ time1_ii 1)))
  (=> ltf2 (= time2_iii (+ time2_ii 1)))
  (=> lf1 (= time1_iii (+ time1_i 2)))
  (=> lf2 (= time2_iii (+ time2_i 2)))
  (=> l1 (= i1_i (+ i1 1)))
  (=> l2 (= i2_i (+ i2 1)))
  (loop p1 p2 i1_i i2_i glen1 glen2 plen1 plen2 guess1 guess2 pw1 pw2 time1_iii time2_iii time1_iv time2_iv))
  (loop p1 p2 i1 i2 glen1 glen2 plen1 plen2 guess1 guess2 pw1 pw2 time1 time2 time1_iv time2_iv)))

(rule (=> (and
  (not (or (and p1 (< i1 glen1)) (and p2 (< i2 glen2))))
  (=> p1 (= time1_i (+ time1 1)))
  (=> p2 (= time2_i (+ time2 1)))
  (=> (not p1) (= time1_i time1))
  (=> (not p2) (= time2_i time2)))
  (loop p1 p2 i1 i2 glen1 glen2 plen1 plen2 guess1 guess2 pw1 pw2 time1 time2 time1_i time2_i)))

(rule (=> (and
  (or p1 p2)
  (=> p1 (= time1_i (+ time1 1)))
  (=> p2 (= time2_i (+ time2 1)))
  (loop p1 p2 0 0 glen1 glen2 plen1 plen2 guess1 guess2 pw1 pw2 time1_i time2_i time1_ii time2_ii))
  (pwcheck p1 p2 glen1 glen2 plen1 plen2 guess1 guess2 pw1 pw2 time1 time2 time1_ii time2_ii)))

(rule (=> 
  (not (or p1 p2))
  (pwcheck p1 p2 glen1 glen2 plen1 plen2 guess1 guess2 pw1 pw2 time1 time2 time1 time2)))

(rule (=> (and
 (=> (and p1 p2) (and (= glen1 glen2) (= time1 time2)))
 (pwcheck p1 p2 glen1 glen2 plen1 plen2 guess1 guess2 pw1 pw2 time1 time2 time1_i time2_i)
 (not (=> (and p1 p2) (= time1_i time2_i))))
 fail))



(query fail)
