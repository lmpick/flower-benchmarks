(declare-rel fail ())
(declare-rel loop (Bool Bool (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Bool Bool Int Int Bool Bool))
(declare-rel check (Bool Bool (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int Bool Bool))

(declare-var p1 Bool)
(declare-var l1 Bool)
(declare-var t1 Bool)
(declare-var f1 Bool)
(declare-var i1 Int)
(declare-var i1_i Int)
(declare-var res1 Bool)
(declare-var res1_i Bool)
(declare-var res1_ii Bool)
(declare-var password1 (Array Int Int))
(declare-var input1 (Array Int Int))
(declare-var len1 Int)
(declare-var in_len1 Int)
(declare-var p2 Bool)
(declare-var l2 Bool)
(declare-var t2 Bool)
(declare-var f2 Bool)
(declare-var i2 Int)
(declare-var i2_i Int)
(declare-var res2 Bool)
(declare-var res2_i Bool)
(declare-var res2_ii Bool)
(declare-var password2 (Array Int Int))
(declare-var input2 (Array Int Int))
(declare-var len2 Int)
(declare-var in_len2 Int)

(rule (=> (and
  (or (and p1 (< i1 len1)) (and p2 (< i2 len2)))
  (= l1 (and p1 (< i1 len1)))
  (= l2 (and p2 (< i2 len2)))
  (=> l1 (= res1_i (and res1 (= (select password1 i1) (select input1 i1)))))
  (=> l2 (= res2_i (and res2 (= (select password2 i2) (select input2 i2)))))
  (=> l1 (= i1_i (+ i1 1)))
  (=> l2 (= i2_i (+ i2 2)))
  (loop p1 p2 input1 input2 password1 password2 len1 len2 res1_i res2_i i1_i i2_i res1_ii res2_ii))
  (loop p1 p2 input1 input2 password1 password2 len1 len2 res1 res2 i1 i2 res1_ii res2_ii)))

(rule (=>
  (not (or (and p1 (< i1 len1)) (and p2 (< i2 len2))))
  (loop p1 p2 input1 input2 password1 password2 len1 len2 res1 res2 i1 i2 res1 res2)))

(rule (=> (and
  (=> p1 (= res1 (= len1 in_len1)))
  (=> p2 (= res2 (= len2 in_len2)))
  (=> (and p1 p2) (= (= password1 input1) (= password2 input2))) ; declassify password == input
  (=> (and p1 p2) (= (= len1 in_len1) (= len2 in_len2))) ; declassify password == input (lengths)
  (=> p1 (= i1 0))
  (=> p2 (= i2 0))
  (= t1 (and p1 res1))
  (= t2 (and p2 res2))
  (= f1 (and p1 (not res1)))
  (= f2 (and p2 (not res2)))
  (loop t1 t2 input1 input2 password1 password2 len1 len2 res1 res2 i1 i1 res1_i res2_i))
  (check p1 p2 input1 input2 password1 password2 in_len1 in_len2 len1 len2 res1 res2)))

(rule (=> (and
  (=> (and p1 p2) (and (= in_len1 in_len2) (= input1 input2)))
  (check p1 p2 input1 input2 password1 password2 in_len1 in_len2 len1 len2 res1 res2)
  (not (=> (and p1 p2) (= res1 res2))))
  fail))

(query fail)
