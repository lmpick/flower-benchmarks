(declare-rel fail ())
(declare-rel inputPin (Bool Bool Int Int))
(declare-rel main (Bool Bool Int Int))
(declare-var p1 Bool)
(declare-var res1 Int)
(declare-var l1 Int)
(declare-var h1 Int)
(declare-var t1 Bool)
(declare-var f1 Bool)
(declare-var p2 Bool)
(declare-var res2 Int)
(declare-var l2 Int)
(declare-var h2 Int)
(declare-var t2 Bool)
(declare-var f2 Bool)

(rule (inputPin p1 p2 res1 res2))

(rule (=> (and
  (or p1 p2)
  (inputPin p1 p2 res1 res2)
  (=> p1 (= h1 res1))
  (=> p2 (= h2 res2))
  (= t1 (and p1 (< h1 0)))
  (= t2 (and p2 (< h2 0)))
  (= f1 (and p1 (not (< h1 0))))
  (= f2 (and p2 (not (< h2 0))))
  (=> t1 (= l1 0))
  (=> t2 (= l2 0))
  (=> f1 (= l1 0))
  (=> f2 (= l2 0)))
  (main p1 p2 l1 l2)))

(rule (=> (and
  (not (or p1 p2))
  (=> p1 (= h1 res1))
  (=> p2 (= h2 res2))
  (= t1 (and p1 (< h1 0)))
  (= t2 (and p2 (< h2 0)))
  (= f1 (and p1 (not (< h1 0))))
  (= f2 (and p2 (not (< h2 0))))
  (=> t1 (= l1 0))
  (=> t2 (= l2 0))
  (=> f1 (= l1 0))
  (=> f2 (= l2 0)))
  (main p1 p2 l1 l2)))

(rule (=> (and
  (main p1 p2 l1 l2)
  (not (=> (and p1 p2) (= l1 l2))))
  fail))

(query fail) 
